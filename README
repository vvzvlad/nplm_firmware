




-----шрифты------
https://learn.adafruit.com/adafruit-gfx-graphics-library/using-fonts
https://tchapi.github.io/Adafruit-GFX-Font-Customiser/

GLCD Font Creator
SNAAB FontEditor

Adafruit GFX × GNU Unifont: https://github.com/joeycastillo/Adafruit-GFX-Library



Устарело, см. Adafruit_GFX_Buffer. Дело было в больших накладных расходах на запись каждого пикселя. Теперь все рисуется в память(во фреймбуффер), а потом быстро засовывается в экран.
-------spees issues----------
По-видимому, дело в в том, что даже drawRGBBitmap в Adafruit_GFX.cpp#L1001 использует writePixel, вместо writeFastVLine/writeFastHLine как в drawRect.
Или writeFastVLine тоже в итоге приводятся к writePixel?

Каким-то образом добиваются 60FPS на похожем экране SSD1351 128x128  https://github.com/bountylabs/blocks-with-screens

задействует аппаратное SPI: https://github.com/adafruit/Adafruit-GFX-Library/pull/370
(не помогло)


Выглядит очень хорошо --> Прямая запись через SPI: http://blog.dzl.dk/2020/04/04/crazy-fast-tft-action-with-adafruit-gfx-and-esp32/









Устарело, см. мейкфайл, переписал rgb565_converter.py
-------conver assets to .h files----------
img2h (javasript version): https://github.com/javl/image2cpp/blob/master/index.html
img2h (microsoft studio cpp version): https://www.codeproject.com/Articles/5336116/Img2Cpp-Create-Cplusplus-Headers-for-Embedding-Ima


github:
https://github.com/liyanboy74/bmp24-to-rgb565
https://github.com/plerros/pixmap565
выбрана в итоге эта --> https://github.com/CommanderRedYT/rgb565-converter
python3 ./common/rgb565_converter.py --input ./assets/flicker_msg_bad_lamp.png --output ./assets/flicker_msg_bad_lamp.cpp

python:
https://stackoverflow.com/questions/19131556/how-to-get-rgb888-24-bit-and-rgb565-16-bit-framebuffer-dump-from-a-jpg-ima
https://github.com/jimmywong2003/PNG-to-RGB565
http://www.penguintutor.com/programming/picodisplayanimations


about bmp: https://medium.com/sysf/bits-to-bitmaps-a-simple-walkthrough-of-bmp-image-format-765dc6857393
https://en.wikipedia.org/wiki/BMP_file_format
